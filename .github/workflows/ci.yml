name: CI Build

on: [push]

env:
  REGISTRY: docker.io
  IMAGE_NAME: xomodo/aspnet-todo-api

jobs:
  dotnet-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: app
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET 5.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - name: Display dotnet version
        run: dotnet --version
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal

  docker-build:
    needs: dotnet-test
    runs-on: ubuntu-latest
      run:
        shell: bash
        working-directory: app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: debug
        run: |
          pwd
          ls -la
      - name: Login to Dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            maintainer=Admir Trakic <xomodo@gmail.com>
      - name: JSON output
        run: |
          echo "maintainer=${{ fromJSON(steps.meta.outputs.json).labels['maintainer'] }}"
          echo "version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}"
          echo "revision=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}"
          echo "created=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.IMAGE_NAME }}:latest
